plugins {
    id 'java'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}


dependencies {
    compileOnly "io.papermc.paper:paper-api:${project.minecraft_version}-R0.1-SNAPSHOT"

    // HTTP client and JSON
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.2.5'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation "io.papermc.paper:paper-api:${project.minecraft_version}-R0.1-SNAPSHOT"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("plugin.yml") {
        expand "version": project.version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}


test {
    useJUnitPlatform()
    // Temporarily disable tests until we can properly mock the plugin environment
    enabled = false
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName}"}
    }
    
    // Include dependencies in the JAR
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    // Exclude Bukkit API from the final JAR
    exclude "io/papermc/**"
    exclude "org/bukkit/**"
    exclude "net/kyori/**"
    exclude "org/checkerframework/**"
    exclude "org/jetbrains/**"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}

compileJava {
    options.compilerArgs += ['-Xlint:deprecation', '-Xdiags:verbose']
}
